{"ast":null,"code":"import { legacy_createStore as createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducers } from \"../reducers\"; // Save to localStorage\n\nfunction saveToLocalStorage(store) {\n  try {\n    const serializedStore = JSON.stringify(store);\n    window.localStorage.setItem('store', serializedStore);\n  } catch (e) {\n    console.log(e);\n  }\n} // LoadFromLocalStorage : retrieving data from db to UI\n\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedStore = window.localStorage.getItem('store');\n    if (serializedStore === null) return undefined;\n    return JSON.parse(serializedStore);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n} // It also uses the composeEnhancers function to enhance the store with Redux DevTools extension support.\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst persistedState = loadFromLocalStorage(); //  get a initialState from LocalStorage\n\nconst store = createStore(reducers, persistedState, composeEnhancers(applyMiddleware(thunk)));\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nexport default store;","map":{"version":3,"sources":["D:/My Projects/SocialMediaApp - MERN/frontend/src/store/ReduxStore.js"],"names":["legacy_createStore","createStore","applyMiddleware","compose","thunk","reducers","saveToLocalStorage","store","serializedStore","JSON","stringify","window","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","undefined","parse","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","persistedState","subscribe","getState"],"mappings":"AAAA,SACIA,kBAAkB,IAAIC,WAD1B,EAEIC,eAFJ,EAGIC,OAHJ,QAIO,OAJP;AAKA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,MAAI;AACA,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCL,eAArC;AACH,GAHD,CAGE,OAAOM,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,C,CAED;;;AACA,SAASG,oBAAT,GAAgC;AAC5B,MAAI;AACA,UAAMT,eAAe,GAAGG,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,OAA5B,CAAxB;AACA,QAAIV,eAAe,KAAK,IAAxB,EAA8B,OAAOW,SAAP;AAC9B,WAAOV,IAAI,CAACW,KAAL,CAAWZ,eAAX,CAAP;AACH,GAJD,CAIE,OAAOM,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOK,SAAP;AACH;AACJ,C,CAED;;;AACA,MAAME,gBAAgB,GAAGV,MAAM,CAACW,oCAAP,IAA+CnB,OAAxE;AACA,MAAMoB,cAAc,GAAGN,oBAAoB,EAA3C,C,CAA+C;;AAE/C,MAAMV,KAAK,GAAGN,WAAW,CAACI,QAAD,EAAWkB,cAAX,EAA2BF,gBAAgB,CAACnB,eAAe,CAACE,KAAD,CAAhB,CAA3C,CAAzB;AAEAG,KAAK,CAACiB,SAAN,CAAgB,MAAMlB,kBAAkB,CAACC,KAAK,CAACkB,QAAN,EAAD,CAAxC;AAEA,eAAelB,KAAf","sourcesContent":["import {\r\n    legacy_createStore as createStore,\r\n    applyMiddleware,\r\n    compose,\r\n} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\n// Save to localStorage\r\nfunction saveToLocalStorage(store) {\r\n    try {\r\n        const serializedStore = JSON.stringify(store);\r\n        window.localStorage.setItem('store', serializedStore);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n// LoadFromLocalStorage : retrieving data from db to UI\r\nfunction loadFromLocalStorage() {\r\n    try {\r\n        const serializedStore = window.localStorage.getItem('store');\r\n        if (serializedStore === null) return undefined;\r\n        return JSON.parse(serializedStore);\r\n    } catch (e) {\r\n        console.log(e);\r\n        return undefined;\r\n    }\r\n}\r\n\r\n// It also uses the composeEnhancers function to enhance the store with Redux DevTools extension support.\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst persistedState = loadFromLocalStorage(); //  get a initialState from LocalStorage\r\n\r\nconst store = createStore(reducers, persistedState, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}