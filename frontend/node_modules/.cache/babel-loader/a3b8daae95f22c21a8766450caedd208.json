{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Projects\\\\SocialMediaApp - MERN\\\\client\\\\src\\\\components\\\\postShare\\\\PostShare.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './PostShare.css';\nimport ProfileImg from '../../img/profileImg.jpg';\nimport { UilScenery } from '@iconscout/react-unicons';\nimport { UilPlayCircle } from '@iconscout/react-unicons';\nimport { UilLocationPoint } from '@iconscout/react-unicons';\nimport { UilSchedule } from '@iconscout/react-unicons';\nimport { UilTimes } from '@iconscout/react-unicons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uploadImage, uploadPost } from '../../actions/uploadAction';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostShare = () => {\n  _s();\n\n  const serverPublic = process.env.REACT_APP_PUBLIC_FOLDER;\n  const loading = useSelector(state => state.PostReducer.uploading);\n  const [image, setImage] = useState(null);\n  const dispatch = useDispatch();\n  const desc = useRef();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n\n  const onImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      let img = event.target.files[0];\n      setImage(img);\n    }\n  };\n\n  const imageRef = useRef();\n\n  const resetShare = () => {\n    setImage(null);\n    desc.current.value = \"\";\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newPost = {\n      userId: user._id,\n      desc: desc.current.value\n    }; // if user want to upload image\n\n    if (image) {\n      const data = new FormData();\n      const filename = Date.now() + image.name;\n      data.append(\"name\", filename);\n      data.append(\"file\", image);\n      newPost.image = filename;\n      console.log(newPost);\n\n      try {\n        dispatch(uploadImage(data));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    dispatch(uploadPost(newPost));\n    console.log(newPost);\n    resetShare();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostShare\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user._id}`,\n      className: \"profile\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profilePicture ? serverPublic + user.profilePicture : serverPublic + \"defaultProfile.jpg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 68\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: desc,\n        required: true,\n        type: \"text\",\n        placeholder: \"What's happening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postOptions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          style: {\n            color: \"var(--photo)\"\n          },\n          onClick: () => imageRef.current.click(),\n          children: [/*#__PURE__*/_jsxDEV(UilScenery, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), \"Photo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          style: {\n            color: \"var(--video)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(UilPlayCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), \"Video\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          style: {\n            color: \"var(--location)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(UilLocationPoint, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), \"Location\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          style: {\n            color: \"var(--shedule)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(UilSchedule, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), \"Schedule\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button ps-button\",\n          onClick: handleSubmit,\n          disabled: loading,\n          children: loading ? \"Uploading...\" : \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"myImage\",\n            ref: imageRef,\n            onChange: onImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewImage\",\n        children: [/*#__PURE__*/_jsxDEV(UilTimes, {\n          onClick: () => setImage(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(image),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostShare, \"RFDjLdX5O9PIpo+kok3xH9VKVfc=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = PostShare;\nexport default PostShare;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostShare\");","map":{"version":3,"sources":["D:/My Projects/SocialMediaApp - MERN/client/src/components/postShare/PostShare.jsx"],"names":["React","useState","useRef","ProfileImg","UilScenery","UilPlayCircle","UilLocationPoint","UilSchedule","UilTimes","useDispatch","useSelector","uploadImage","uploadPost","Link","PostShare","serverPublic","process","env","REACT_APP_PUBLIC_FOLDER","loading","state","PostReducer","uploading","image","setImage","dispatch","desc","user","authReducer","authData","onImageChange","event","target","files","img","imageRef","resetShare","current","value","handleSubmit","e","preventDefault","newPost","userId","_id","data","FormData","filename","Date","now","name","append","console","log","error","profilePicture","color","click","display","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport './PostShare.css'\r\nimport ProfileImg from '../../img/profileImg.jpg';\r\nimport { UilScenery } from '@iconscout/react-unicons';\r\nimport { UilPlayCircle } from '@iconscout/react-unicons';\r\nimport { UilLocationPoint } from '@iconscout/react-unicons';\r\nimport { UilSchedule } from '@iconscout/react-unicons';\r\nimport { UilTimes } from '@iconscout/react-unicons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uploadImage, uploadPost } from '../../actions/uploadAction';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst PostShare = () => {\r\n    const serverPublic = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n    const loading = useSelector((state) => state.PostReducer.uploading);\r\n    const [image, setImage] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const desc = useRef();\r\n    const { user } = useSelector((state) => state.authReducer.authData)\r\n\r\n    const onImageChange = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            let img = event.target.files[0];\r\n            setImage(img);\r\n        }\r\n    }\r\n\r\n    const imageRef = useRef();\r\n\r\n\r\n    const resetShare = () => {\r\n        setImage(null);\r\n        desc.current.value = \"\"\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newPost = {\r\n            userId: user._id,\r\n            desc: desc.current.value\r\n        }\r\n        // if user want to upload image\r\n        if (image) {\r\n            const data = new FormData()\r\n            const filename = Date.now() + image.name;\r\n            data.append(\"name\", filename)\r\n            data.append(\"file\", image)\r\n            newPost.image = filename;\r\n            console.log(newPost);\r\n\r\n            try {\r\n                dispatch(uploadImage(data))\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        dispatch(uploadPost(newPost))\r\n        console.log(newPost)\r\n        resetShare();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"PostShare\">\r\n            {/* {\"homepage\" === 'profilePage' ? ('') :\r\n                (\r\n                    <Link to={`/profile/${user._id}`}>\r\n                        <img src={user.profilePicture ? serverPublic + user.profilePicture : serverPublic + \"defaultProfile.jpg\"} alt=\"\" />\r\n                    </Link>\r\n                )\r\n            } */}\r\n            <Link to={`/profile/${user._id}`} className='profile'> <img src={user.profilePicture ? serverPublic + user.profilePicture : serverPublic + \"defaultProfile.jpg\"} alt=\"\" /> </Link>\r\n            <div>\r\n                <input ref={desc} required type=\"text\" placeholder=\"What's happening\" />\r\n                <div className=\"postOptions\">\r\n                    <div className=\"option\" style={{ color: \"var(--photo)\" }} onClick={() => imageRef.current.click()}>\r\n                        <UilScenery />\r\n                        Photo\r\n                    </div>\r\n                    <div className=\"option\" style={{ color: \"var(--video)\" }}>\r\n                        <UilPlayCircle />\r\n                        Video\r\n                    </div>\r\n                    <div className=\"option\" style={{ color: \"var(--location)\" }}>\r\n                        <UilLocationPoint />\r\n                        Location\r\n                    </div>\r\n                    <div className=\"option\" style={{ color: \"var(--shedule)\" }}>\r\n                        <UilSchedule />\r\n                        Schedule\r\n                    </div>\r\n\r\n                    <button className='button ps-button' onClick={handleSubmit} disabled={loading} >\r\n                        {loading ? \"Uploading...\" : \"Share\"}\r\n                    </button>\r\n\r\n                    <div style={{ display: \"none\" }}>\r\n                        <input type=\"file\" name='myImage' ref={imageRef} onChange={onImageChange} />\r\n                    </div>\r\n                </div>\r\n\r\n                {image &&\r\n                    <div className=\"previewImage\">\r\n                        <UilTimes onClick={() => setImage(null)} />\r\n                        <img src={URL.createObjectURL(image)} alt=\"\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostShare"]},"metadata":{},"sourceType":"module"}