{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Projects\\\\SocialMediaApp - MERN\\\\frontend\\\\src\\\\components\\\\Conversation\\\\Conversation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api/UserReq';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Conversation = _ref => {\n  _s();\n\n  let {\n    data,\n    currentUserId\n  } = _ref;\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    const userId = data.members.find(id => id !== currentUserId);\n    console.log(userId);\n\n    const getUserData = async () => {\n      try {\n        const {\n          data\n        } = await getUser(userId);\n        setUserData(data);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Conversation\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Conversation, \"Q/bN2hINckB+VINYSZfns3MkAk8=\");\n\n_c = Conversation;\nexport default Conversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["D:/My Projects/SocialMediaApp - MERN/frontend/src/components/Conversation/Conversation.jsx"],"names":["React","useEffect","useState","getUser","Conversation","data","currentUserId","userData","setUserData","userId","members","find","id","console","log","getUserData","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,mBAAxB;;;AAEA,MAAMC,YAAY,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA4B;AAEhD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,MAAM,GAAGJ,IAAI,CAACK,OAAL,CAAaC,IAAb,CAAmBC,EAAD,IAAQA,EAAE,KAAKN,aAAjC,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,UAAMM,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAM;AAAEV,UAAAA;AAAF,YAAW,MAAMF,OAAO,CAACM,MAAD,CAA9B;AACAD,QAAAA,WAAW,CAACH,IAAD,CAAX;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACD,OAJD,CAIE,OAAOW,KAAP,EAAc;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,KARD;;AASAD,IAAAA,WAAW;AAEZ,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAvBD;;GAAMX,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { getUser } from '../../api/UserReq'\r\n\r\nconst Conversation = ({ data, currentUserId }) => {\r\n\r\n  const [userData, setUserData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const userId = data.members.find((id) => id !== currentUserId)\r\n    console.log(userId)\r\n    const getUserData = async () => {\r\n      try {\r\n        const { data } = await getUser(userId)\r\n        setUserData(data)\r\n        console.log(data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    getUserData();\r\n    \r\n  }, [])\r\n\r\n  return (\r\n    <div>Conversation</div>\r\n  )\r\n}\r\n\r\nexport default Conversation"]},"metadata":{},"sourceType":"module"}