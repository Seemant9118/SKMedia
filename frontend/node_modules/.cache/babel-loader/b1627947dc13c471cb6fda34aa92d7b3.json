{"ast":null,"code":"const PostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    posts: [],\n    loading: false,\n    error: false,\n    uploading: false\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // belongs to PostShare.jsx\n    case \"UPLOAD_START\":\n      return { ...state,\n        uploading: true,\n        error: false\n      };\n\n    case \"UPLOAD_SUCCESS\":\n      return { ...state,\n        posts: [action.data, ...state.posts],\n        uploading: false,\n        error: false\n      };\n\n    case \"UPLOAD FAIL\":\n      return { ...state,\n        uploading: false,\n        error: true\n      };\n    // belongs to Posts.jsx\n\n    case \"RETREIVING_START\":\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case \"RETREIVING_SUCCESS\":\n      return { ...state,\n        posts: action.data,\n        loading: false,\n        error: false\n      };\n\n    case \"RETREIVING_FAIL\":\n      return { ...state,\n        loading: false,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = PostReducer;\nexport default PostReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostReducer\");","map":{"version":3,"sources":["D:/My Projects/SocialMediaApp - MERN/client/src/reducers/PostReducer.js"],"names":["PostReducer","state","posts","loading","error","uploading","action","type","data"],"mappings":"AAAA,MAAMA,WAAW,GAAG,YAAmF;AAAA,MAAlFC,KAAkF,uEAA1E;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE,KAAtB;AAA6BC,IAAAA,KAAK,EAAE,KAApC;AAA2CC,IAAAA,SAAS,EAAE;AAAtD,GAA0E;AAAA,MAAXC,MAAW;;AAEnG,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,cAAL;AACI,aAAO,EAAE,GAAGN,KAAL;AAAYI,QAAAA,SAAS,EAAE,IAAvB;AAA6BD,QAAAA,KAAK,EAAE;AAApC,OAAP;;AACJ,SAAK,gBAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYC,QAAAA,KAAK,EAAE,CAACI,MAAM,CAACE,IAAR,EAAc,GAAGP,KAAK,CAACC,KAAvB,CAAnB;AAAkDG,QAAAA,SAAS,EAAC,KAA5D;AAAmED,QAAAA,KAAK,EAAE;AAA1E,OAAP;;AACJ,SAAK,aAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,SAAS,EAAE,KAAvB;AAA8BD,QAAAA,KAAK,EAAE;AAArC,OAAP;AAEJ;;AACA,SAAK,kBAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYE,QAAAA,OAAO,EAAE,IAArB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAP;;AACJ,SAAK,oBAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYC,QAAAA,KAAK,EAAEI,MAAM,CAACE,IAA1B;AAAgCL,QAAAA,OAAO,EAAE,KAAzC;AAAgDC,QAAAA,KAAK,EAAE;AAAvD,OAAP;;AACJ,SAAK,iBAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYE,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OAAP;;AACJ;AACI,aAAOH,KAAP;AAjBR;AAmBH,CArBD;;KAAMD,W;AAwBN,eAAeA,WAAf","sourcesContent":["const PostReducer = (state = { posts: [], loading: false, error: false, uploading: false }, action) => {\r\n\r\n    switch (action.type) {\r\n        // belongs to PostShare.jsx\r\n        case \"UPLOAD_START\":\r\n            return { ...state, uploading: true, error: false }\r\n        case \"UPLOAD_SUCCESS\":\r\n            return { ...state, posts: [action.data, ...state.posts], uploading:false, error: false }\r\n        case \"UPLOAD FAIL\":\r\n            return { ...state, uploading: false, error: true }\r\n\r\n        // belongs to Posts.jsx\r\n        case \"RETREIVING_START\":\r\n            return { ...state, loading: true, error: false };\r\n        case \"RETREIVING_SUCCESS\":\r\n            return { ...state, posts: action.data, loading: false, error: false };\r\n        case \"RETREIVING_FAIL\":\r\n            return { ...state, loading: false, error: true };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default PostReducer"]},"metadata":{},"sourceType":"module"}