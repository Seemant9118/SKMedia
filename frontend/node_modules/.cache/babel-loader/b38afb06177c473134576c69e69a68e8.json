{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Projects\\\\SocialMediaApp - MERN\\\\frontend\\\\src\\\\pages\\\\chat\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './chat.css';\nimport LogoSearch from '../../components/logoSearch/LogoSearch';\nimport { useSelector } from 'react-redux';\nimport { userChats } from '../../api/ChatRequest';\nimport Conversation from '../../components/Conversation/Conversation';\nimport { Link } from 'react-router-dom';\nimport { UilSetting } from '@iconscout/react-unicons';\nimport Noti from '../../img/noti.png';\nimport Home from '../../img/home.png';\nimport Comment from '../../img/comment.png';\nimport Chatbox from '../../components/Chatbox/Chatbox';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n  const [chats, setChats] = useState([]);\n  const [currentChat, setCurrentchat] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io.apply('http://localhost:8800');\n    socket.current.emit(\"new-user-add\", user._id);\n    socket.current.on('get-users', users => {\n      setOnlineUsers(users);\n    });\n  }, [user]);\n  useEffect(() => {\n    const getChats = async () => {\n      try {\n        const {\n          data\n        } = await userChats(user._id);\n        setChats(data);\n        console.log(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getChats();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Left-side-chat\",\n      children: [/*#__PURE__*/_jsxDEV(LogoSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Chat-list\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentchat(chat),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              data: chat,\n              currentUserId: user._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Right-side-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '20rem',\n          alignSelf: 'flex-end'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navIcons\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"../home\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Home,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(UilSetting, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Noti,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"../chat\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Comment,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chatbox, {\n        chat: currentChat,\n        currentUser: user._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"UUAz4A7876L7ph4bOL0QAzBg430=\", false, function () {\n  return [useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/My Projects/SocialMediaApp - MERN/frontend/src/pages/chat/Chat.jsx"],"names":["React","useEffect","useRef","useState","LogoSearch","useSelector","userChats","Conversation","Link","UilSetting","Noti","Home","Comment","Chatbox","io","Chat","user","state","authReducer","authData","chats","setChats","currentChat","setCurrentchat","onlineUsers","setOnlineUsers","socket","current","apply","emit","_id","on","users","getChats","data","console","log","err","map","chat","width","alignSelf"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport './chat.css';\r\nimport LogoSearch from '../../components/logoSearch/LogoSearch';\r\nimport { useSelector } from 'react-redux';\r\nimport { userChats } from '../../api/ChatRequest';\r\nimport Conversation from '../../components/Conversation/Conversation';\r\nimport { Link } from 'react-router-dom';\r\nimport { UilSetting } from '@iconscout/react-unicons';\r\nimport Noti from '../../img/noti.png';\r\nimport Home from '../../img/home.png';\r\nimport Comment from '../../img/comment.png'\r\nimport Chatbox from '../../components/Chatbox/Chatbox';\r\nimport {io} from 'socket.io-client'\r\n\r\nconst Chat = () => {\r\n    const { user } = useSelector((state) => state.authReducer.authData)\r\n\r\n    const [chats, setChats] = useState([]);\r\n    const [currentChat, setCurrentchat] = useState(null);\r\n    const [onlineUsers,setOnlineUsers] = useState([]);\r\n    const socket = useRef();\r\n    \r\n    useEffect(()=> {\r\n        socket.current = io.apply('http://localhost:8800');\r\n        socket.current.emit(\"new-user-add\", user._id)\r\n        socket.current.on('get-users',(users) => {\r\n            setOnlineUsers(users);\r\n        })\r\n    },[user])\r\n    \r\n    useEffect(() => {\r\n        const getChats = async () => {\r\n            try {\r\n                const { data } = await userChats(user._id)\r\n                setChats(data)\r\n                console.log(data)\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        getChats()\r\n    }, [user])\r\n\r\n    return (\r\n        <div className='Chat'>\r\n            {/* Left Side */}\r\n            <div className=\"Left-side-chat\">\r\n                <LogoSearch />\r\n                <div className=\"Chat-container\">\r\n                    <h2>Chats</h2>\r\n                    <div className=\"Chat-list\">\r\n                        {chats.map((chat) => (\r\n                            <div onClick={() => setCurrentchat(chat)}>\r\n                                <Conversation data={chat} currentUserId={user._id} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Right Side */}\r\n            <div className=\"Right-side-chat\">\r\n                <div style={{ width: '20rem', alignSelf: 'flex-end' }}>\r\n                    <div className=\"navIcons\">\r\n                        <Link to='../home'><img src={Home} alt=\"\" /></Link>\r\n                        <UilSetting />\r\n                        <img src={Noti} alt=\"\" />\r\n                        <Link to='../chat'><img src={Comment} alt=\"\" /></Link>\r\n                    </div>\r\n                </div>\r\n                {/* Chat body */}\r\n                <Chatbox chat={currentChat} currentUser={user._id} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}